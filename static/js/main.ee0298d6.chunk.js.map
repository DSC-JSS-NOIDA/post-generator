{"version":3,"sources":["assets/images/logo.svg","assets/images/sample.jpg","components/Header.js","components/Preview.js","components/ExportAsImg.js","components/Control.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","dark","expand","className","src","logo","width","alt","href","target","Preview","data","this","props","detailsToBeRendered","details","filter","element","length","map","detail","bounds","style","position","top","id","height","image","Component","ExportAsImg","componentRef","React","createRef","state","options","type","onClick","downloadAs","exportComponentAsPNG","compref","exportComponentAsJPEG","value","Control","handleChange","event","setState","URL","createObjectURL","files","changeWidth","e","changeHeight","addMoreFields","newKey","parseInt","keyNum","newArr","detailsFields","name","onChange","changeVal","placeholder","sample","toBeDownloaded","Object","defineProperty","enumerable","console","log","ref","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ee0298d6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c22bf806.svg\";","module.exports = __webpack_public_path__ + \"static/media/sample.24c635f4.jpg\";","import React from \"react\";\nimport { Navbar, NavbarBrand } from \"reactstrap\";\nimport logo from \"../assets/images/logo.svg\";\nexport default function Header() {\n  return (\n    <Navbar dark expand=\"md\">\n      <div className=\"container\">\n        <div className=\"d-flex align-items-center\">\n          <img src={logo} width=\"65\" alt=\"\" />\n          &nbsp;\n          <h3 className=\"text-white\">Post Generator</h3>\n        </div>\n\n        <a\n          href=\"https://github.com/dsc-jss-noida\"\n          className=\"text-decoration-none text-white github-icon\"\n          target=\"_blank\"\n        >\n          <i className=\"fa fa-github fa-3x mr-3\"></i>\n        </a>\n      </div>\n    </Navbar>\n  );\n}\n","import React, { Component } from \"react\";\nimport Draggable from \"react-draggable\";\n\nexport class Preview extends Component {\n  render() {\n    const { data } = this.props;\n\n    let detailsToBeRendered = data.details\n      .filter((element) => element.length > 0)\n      .map((detail) => {\n        return (\n          <Draggable bounds=\"parent\">\n            <div style={{ position: \"absolute\", top: 0 }}>{detail}</div>\n          </Draggable>\n        );\n      });\n    return (\n      <div className=\"preview\">\n        {detailsToBeRendered}\n\n        <img\n          id=\"preview-image\"\n          width={data.width ? data.width : \"100%\"}\n          height={data.height ? data.height : \"500px\"}\n          src={data.image}\n          alt=\"Random\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default Preview;\n","import React, { Component } from \"react\";\nimport {\n  exportComponentAsJPEG,\n  exportComponentAsPNG,\n} from \"react-component-export-image\";\n\nexport class ExportAsImg extends Component {\n  constructor(props) {\n    super(props);\n    this.componentRef = React.createRef();\n\n    this.state = {};\n  }\n\n  render() {\n    const { options } = this.props;\n    return (\n      <input\n        type=\"button\"\n        onClick={() => {\n          options.downloadAs === \"PNG\"\n            ? exportComponentAsPNG(this.props.compref)\n            : exportComponentAsJPEG(this.props.compref);\n        }}\n        value=\"Download\"\n      />\n    );\n  }\n}\n\nexport default ExportAsImg;\n","import React, { Component } from \"react\";\nimport { Preview } from \"./Preview\";\nimport sample from \"../assets/images/sample.jpg\";\nimport ExportAsImg from \"./ExportAsImg\";\n\nexport class Control extends Component {\n  constructor(props) {\n    super(props);\n    this.componentRef = React.createRef();\n\n    this.state = {\n      image: sample,\n      width: \"100%\",\n      height: \"500px\",\n      detailsFields: [\n        <input\n          type=\"text\"\n          name=\"0\"\n          onChange={(e) => this.changeVal(e)}\n          placeholder=\"Enter Details\"\n        />,\n      ],\n      keyNum: 0,\n      details: [],\n      toBeDownloaded: <Preview data={this.state} />,\n    };\n  }\n  handleChange = (event) => {\n    this.setState({\n      image: URL.createObjectURL(event.target.files[0]),\n    });\n  };\n  changeWidth = (e) => {\n    this.setState({\n      width: e.target.value,\n    });\n  };\n  changeHeight = (e) => {\n    this.setState({\n      height: e.target.value,\n    });\n  };\n  changeVal(e) {\n    this.setState(\n      Object.defineProperty({}, `detail_${e.target.name}`, {\n        value: e.target.value,\n        enumerable: true,\n      })\n    );\n    let details = this.state.details;\n    details[parseInt(e.target.name)] = e.target.value;\n\n    this.setState({\n      details: details,\n    });\n    console.log(this.state);\n  }\n\n  addMoreFields = () => {\n    let newKey = parseInt(this.state.keyNum) + 1;\n    let newArr = [\n      ...this.state.detailsFields,\n      <input\n        type=\"text\"\n        name={newKey}\n        onChange={(e) => this.changeVal(e)}\n        placeholder=\"Enter Details\"\n      />,\n    ];\n    this.setState({\n      detailsFields: newArr,\n      keyNum: newKey,\n    });\n  };\n  render() {\n    return (\n      <div className=\"main-content\">\n        <div className=\"control-panel\">\n          <h2>Post Generator</h2>\n          <p>Tool that gives your social media ready post.</p>\n          <input type=\"file\" onChange={(event) => this.handleChange(event)} />\n          <input\n            type=\"number\"\n            placeholder=\"Enter Width\"\n            onChange={(e) => this.changeWidth(e)}\n          />\n          <input\n            type=\"number\"\n            placeholder=\"Enter Height\"\n            onChange={(e) => this.changeHeight(e)}\n          />\n          {this.state.detailsFields}\n\n          <input\n            type=\"button\"\n            value=\"Add More Fields\"\n            onClick={() => this.addMoreFields()}\n          />\n          <div className=\"download\">\n            <h5>Download as: </h5>\n            <select\n              name=\"downloadAs\"\n              id=\"\"\n              onClick={(e) => this.setState({ downloadAs: e.target.value })}\n            >\n              <option value=\"PNG\">PNG</option>\n              <option value=\"JPG\">JPG</option>\n            </select>\n          </div>\n          <ExportAsImg options={this.state} compref={this.componentRef} />\n        </div>\n\n        <Preview ref={this.componentRef} data={this.state} />\n      </div>\n    );\n  }\n}\n\nexport default Control;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      Made with &#10084; By <a href=\"https://dscjss.in\">DSC JSSATEN</a>\n      <a\n        href=\"https://github.com/dsc-jss-noida\"\n        className=\" text-black github-footer\"\n        target=\"_blank\"\n      >\n        <i className=\"fa fa-github-square fa-2x\"></i>\n      </a>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport \"./App.css\";\nimport Control from \"./components/Control\";\nimport Draggable from \"react-draggable\";\nimport Footer from \"./components/Footer\";\n\nexport class App extends Component {\n  render() {\n    return (\n      <div style={{ position: \"relative\" }}>\n        <Header />\n        <Control />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}